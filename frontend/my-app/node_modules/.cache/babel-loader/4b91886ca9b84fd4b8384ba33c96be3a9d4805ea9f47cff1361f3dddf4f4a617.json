{"ast":null,"code":"import axios from \"axios\";\nimport { ALL_PRODUCTS_REQUEST, ALL_PRODUCTS_SUCCESS, ALL_PRODUCTS_FAIL, CLEAR_ERRORS } from \"../constants/productConstants\";\nconst initialState = {\n  loading: false,\n  products: [],\n  error: null,\n  productsCount: 0\n};\nexport const productReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ALL_PRODUCTS_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case ALL_PRODUCTS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        products: action.payload,\n        // Ensure this is correct\n        error: null\n      };\n    case ALL_PRODUCTS_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\nexport const getProducts = category => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_PRODUCTS_REQUEST\n    });\n\n    // Pass category as a query parameter\n    const {\n      data\n    } = await axios.get(`/api/v1/products?category=${category}`);\n    dispatch({\n      type: ALL_PRODUCTS_SUCCESS,\n      payload: data.products\n    });\n  } catch (error) {\n    var _error$response, _error$response$data;\n    dispatch({\n      type: ALL_PRODUCTS_FAIL,\n      payload: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Error fetching products\"\n    });\n  }\n};\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["axios","ALL_PRODUCTS_REQUEST","ALL_PRODUCTS_SUCCESS","ALL_PRODUCTS_FAIL","CLEAR_ERRORS","initialState","loading","products","error","productsCount","productReducer","state","action","type","payload","getProducts","category","dispatch","data","get","_error$response","_error$response$data","response","message","clearErrors"],"sources":["C:/Users/divya/Desktop/Projects/SSBPrep/frontend/my-app/src/reducers/productsReducer.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nimport {\r\n  ALL_PRODUCTS_REQUEST,\r\n  ALL_PRODUCTS_SUCCESS,\r\n  ALL_PRODUCTS_FAIL,\r\n  CLEAR_ERRORS,\r\n} from \"../constants/productConstants\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  products: [],\r\n  error: null,\r\n  productsCount: 0,\r\n};\r\n\r\nexport const productReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ALL_PRODUCTS_REQUEST:\r\n      return { ...state, loading: true };\r\n\r\n    case ALL_PRODUCTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        products: action.payload, // Ensure this is correct\r\n        error: null,\r\n      };\r\n\r\n    case ALL_PRODUCTS_FAIL:\r\n      return { ...state, loading: false, error: action.payload };\r\n\r\n    case CLEAR_ERRORS:\r\n      return { ...state, error: null };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getProducts = (category) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ALL_PRODUCTS_REQUEST });\r\n\r\n    // Pass category as a query parameter\r\n    const { data } = await axios.get(`/api/v1/products?category=${category}`);\r\n\r\n    dispatch({\r\n      type: ALL_PRODUCTS_SUCCESS,\r\n      payload: data.products,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ALL_PRODUCTS_FAIL,\r\n      payload: error.response?.data?.message || \"Error fetching products\",\r\n    });\r\n  }\r\n};\r\n\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_ERRORS,\r\n  });\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SACEC,oBAAoB,EACpBC,oBAAoB,EACpBC,iBAAiB,EACjBC,YAAY,QACP,+BAA+B;AAEtC,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,KAAK;EACdC,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAE,IAAI;EACXC,aAAa,EAAE;AACjB,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAGN,YAAY,EAAEO,MAAM,KAAK;EAC9D,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKZ,oBAAoB;MACvB,OAAO;QAAE,GAAGU,KAAK;QAAEL,OAAO,EAAE;MAAK,CAAC;IAEpC,KAAKJ,oBAAoB;MACvB,OAAO;QACL,GAAGS,KAAK;QACRL,OAAO,EAAE,KAAK;QACdC,QAAQ,EAAEK,MAAM,CAACE,OAAO;QAAE;QAC1BN,KAAK,EAAE;MACT,CAAC;IAEH,KAAKL,iBAAiB;MACpB,OAAO;QAAE,GAAGQ,KAAK;QAAEL,OAAO,EAAE,KAAK;QAAEE,KAAK,EAAEI,MAAM,CAACE;MAAQ,CAAC;IAE5D,KAAKV,YAAY;MACf,OAAO;QAAE,GAAGO,KAAK;QAAEH,KAAK,EAAE;MAAK,CAAC;IAElC;MACE,OAAOG,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAMI,WAAW,GAAIC,QAAQ,IAAK,MAAOC,QAAQ,IAAK;EAC3D,IAAI;IACFA,QAAQ,CAAC;MAAEJ,IAAI,EAAEZ;IAAqB,CAAC,CAAC;;IAExC;IACA,MAAM;MAAEiB;IAAK,CAAC,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,6BAA6BH,QAAQ,EAAE,CAAC;IAEzEC,QAAQ,CAAC;MACPJ,IAAI,EAAEX,oBAAoB;MAC1BY,OAAO,EAAEI,IAAI,CAACX;IAChB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAY,eAAA,EAAAC,oBAAA;IACdJ,QAAQ,CAAC;MACPJ,IAAI,EAAEV,iBAAiB;MACvBW,OAAO,EAAE,EAAAM,eAAA,GAAAZ,KAAK,CAACc,QAAQ,cAAAF,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBE,OAAO,KAAI;IAC5C,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM,MAAOP,QAAQ,IAAK;EACnDA,QAAQ,CAAC;IACPJ,IAAI,EAAET;EACR,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}