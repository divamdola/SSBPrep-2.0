{"ast":null,"code":"import { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAIL, CLEAR_ERRORS, REGISTER_USER_REQUEST, REGISTER_USER_SUCCESS, REGISTER_USER_FAIL, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAIL, LOGOUT_SUCCESS, LOGOUT_FAIL } from \"../constants/userConstants\";\nconst storedUser = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : null;\nconst initialState = {\n  user: storedUser,\n  loading: false,\n  isAuthenticated: !!storedUser,\n  // ✅ Ensure it's defined properly\n  error: null\n};\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n    case REGISTER_USER_REQUEST:\n    case LOAD_USER_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_USER_SUCCESS:\n    case LOAD_USER_SUCCESS:\n      localStorage.setItem(\"user\", JSON.stringify(action.payload)); // Save user data\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: true,\n        user: action.payload\n      };\n    case LOGOUT_SUCCESS:\n      localStorage.removeItem(\"user\"); // Clear user data\n      return {\n        ...initialState\n      };\n    case LOGIN_FAIL:\n    case REGISTER_USER_FAIL:\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: false,\n        user: null,\n        error: action.payload\n      };\n    case LOAD_USER_FAIL:\n      return {\n        ...initialState,\n        // ✅ Reset state when loading user fails\n        error: action.payload\n      };\n    case LOGOUT_FAIL:\n      return {\n        ...state,\n        error: action.payload\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","CLEAR_ERRORS","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAIL","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","storedUser","localStorage","getItem","JSON","parse","initialState","user","loading","isAuthenticated","error","authReducer","state","action","type","setItem","stringify","payload","removeItem"],"sources":["C:/Users/divya/Desktop/Projects/SSBPrep/frontend/my-app/src/reducers/authReducer.js"],"sourcesContent":["import {\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    CLEAR_ERRORS,\r\n    REGISTER_USER_REQUEST,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAIL,\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOAD_USER_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL,\r\n  } from \"../constants/userConstants\";\r\n  \r\n  const storedUser = localStorage.getItem(\"user\")\r\n    ? JSON.parse(localStorage.getItem(\"user\"))\r\n    : null;\r\n  \r\n  const initialState = {\r\n    user: storedUser,\r\n    loading: false,\r\n    isAuthenticated: !!storedUser, // ✅ Ensure it's defined properly\r\n    error: null,\r\n  };\r\n  \r\n  export const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case LOGIN_REQUEST:\r\n      case REGISTER_USER_REQUEST:\r\n      case LOAD_USER_REQUEST:\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n        };\r\n  \r\n      case LOGIN_SUCCESS:\r\n      case REGISTER_USER_SUCCESS:\r\n      case LOAD_USER_SUCCESS:\r\n        localStorage.setItem(\"user\", JSON.stringify(action.payload)); // Save user data\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          isAuthenticated: true,\r\n          user: action.payload,\r\n        };\r\n      case LOGOUT_SUCCESS:\r\n        localStorage.removeItem(\"user\"); // Clear user data\r\n        return {\r\n          ...initialState,\r\n        };\r\n  \r\n      case LOGIN_FAIL:\r\n      case REGISTER_USER_FAIL:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          isAuthenticated: false,\r\n          user: null,\r\n          error: action.payload,\r\n        };\r\n  \r\n      case LOAD_USER_FAIL:\r\n        return {\r\n          ...initialState, // ✅ Reset state when loading user fails\r\n          error: action.payload,\r\n        };\r\n  \r\n      case LOGOUT_FAIL:\r\n        return {\r\n          ...state,\r\n          error: action.payload,\r\n        };\r\n  \r\n      case CLEAR_ERRORS:\r\n        return {\r\n          ...state,\r\n          error: null,\r\n        };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  "],"mappings":"AAAA,SACIA,aAAa,EACbC,aAAa,EACbC,UAAU,EACVC,YAAY,EACZC,qBAAqB,EACrBC,qBAAqB,EACrBC,kBAAkB,EAClBC,iBAAiB,EACjBC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,QACN,4BAA4B;AAEnC,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,GAC3CC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,GACxC,IAAI;AAER,MAAMG,YAAY,GAAG;EACnBC,IAAI,EAAEN,UAAU;EAChBO,OAAO,EAAE,KAAK;EACdC,eAAe,EAAE,CAAC,CAACR,UAAU;EAAE;EAC/BS,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGN,YAAY,EAAEO,MAAM,KAAK;EAC3D,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKzB,aAAa;IAClB,KAAKI,qBAAqB;IAC1B,KAAKG,iBAAiB;MACpB,OAAO;QACL,GAAGgB,KAAK;QACRJ,OAAO,EAAE;MACX,CAAC;IAEH,KAAKlB,aAAa;IAClB,KAAKI,qBAAqB;IAC1B,KAAKG,iBAAiB;MACpBK,YAAY,CAACa,OAAO,CAAC,MAAM,EAAEX,IAAI,CAACY,SAAS,CAACH,MAAM,CAACI,OAAO,CAAC,CAAC,CAAC,CAAC;MAC9D,OAAO;QACL,GAAGL,KAAK;QACRJ,OAAO,EAAE,KAAK;QACdC,eAAe,EAAE,IAAI;QACrBF,IAAI,EAAEM,MAAM,CAACI;MACf,CAAC;IACH,KAAKlB,cAAc;MACjBG,YAAY,CAACgB,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;MACjC,OAAO;QACL,GAAGZ;MACL,CAAC;IAEH,KAAKf,UAAU;IACf,KAAKI,kBAAkB;MACrB,OAAO;QACL,GAAGiB,KAAK;QACRJ,OAAO,EAAE,KAAK;QACdC,eAAe,EAAE,KAAK;QACtBF,IAAI,EAAE,IAAI;QACVG,KAAK,EAAEG,MAAM,CAACI;MAChB,CAAC;IAEH,KAAKnB,cAAc;MACjB,OAAO;QACL,GAAGQ,YAAY;QAAE;QACjBI,KAAK,EAAEG,MAAM,CAACI;MAChB,CAAC;IAEH,KAAKjB,WAAW;MACd,OAAO;QACL,GAAGY,KAAK;QACRF,KAAK,EAAEG,MAAM,CAACI;MAChB,CAAC;IAEH,KAAKzB,YAAY;MACf,OAAO;QACL,GAAGoB,KAAK;QACRF,KAAK,EAAE;MACT,CAAC;IAEH;MACE,OAAOE,KAAK;EAChB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}