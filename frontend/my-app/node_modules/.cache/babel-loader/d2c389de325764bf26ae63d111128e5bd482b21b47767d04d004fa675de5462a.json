{"ast":null,"code":"import axiosInstance from \"../utils/axiosInstance\";\nimport { ALL_PRODUCTS_REQUEST, ALL_PRODUCTS_SUCCESS, ALL_PRODUCTS_FAIL, CLEAR_ERRORS } from \"../constants/productConstants\";\nexport const getProducts = category => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_PRODUCTS_REQUEST\n    });\n    const {\n      data\n    } = await axiosInstance.get(`/products?category=${category}`);\n    console.log(\"API Response:\", data); // ✅ Confirm API response in console\n\n    dispatch({\n      type: ALL_PRODUCTS_SUCCESS,\n      payload: data.products\n    });\n    console.log(\"Dispatched Payload:\", data.products); // ✅ Ensure this is an array\n  } catch (error) {\n    var _error$response, _error$response$data, _error$response2, _error$response2$data;\n    console.error(\"API Error:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message);\n    dispatch({\n      type: ALL_PRODUCTS_FAIL,\n      payload: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Error fetching products\"\n    });\n  }\n};\n\n// Clear Errors\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["axiosInstance","ALL_PRODUCTS_REQUEST","ALL_PRODUCTS_SUCCESS","ALL_PRODUCTS_FAIL","CLEAR_ERRORS","getProducts","category","dispatch","type","data","get","console","log","payload","products","error","_error$response","_error$response$data","_error$response2","_error$response2$data","response","message","clearErrors"],"sources":["C:/Users/divya/Desktop/Projects/SSBPrep/frontend/my-app/src/actions/productActions.js"],"sourcesContent":["import axiosInstance from \"../utils/axiosInstance\";\r\nimport {\r\n    ALL_PRODUCTS_REQUEST,\r\n    ALL_PRODUCTS_SUCCESS,\r\n    ALL_PRODUCTS_FAIL,\r\n    CLEAR_ERRORS,\r\n} from \"../constants/productConstants\";\r\n\r\nexport const getProducts = (category) => async (dispatch) => {\r\n  try {\r\n      dispatch({ type: ALL_PRODUCTS_REQUEST });\r\n\r\n      const { data } = await axiosInstance.get(`/products?category=${category}`);\r\n      console.log(\"API Response:\", data); // ✅ Confirm API response in console\r\n\r\n      dispatch({\r\n          type: ALL_PRODUCTS_SUCCESS,\r\n          payload: data.products,\r\n      });\r\n\r\n      console.log(\"Dispatched Payload:\", data.products); // ✅ Ensure this is an array\r\n  } catch (error) {\r\n      console.error(\"API Error:\", error.response?.data?.message || error.message);\r\n\r\n      dispatch({\r\n          type: ALL_PRODUCTS_FAIL,\r\n          payload: error.response?.data?.message || \"Error fetching products\",\r\n      });\r\n  }\r\n};\r\n\r\n\r\n\r\n// Clear Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS,\r\n    });\r\n};\r\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,wBAAwB;AAClD,SACIC,oBAAoB,EACpBC,oBAAoB,EACpBC,iBAAiB,EACjBC,YAAY,QACT,+BAA+B;AAEtC,OAAO,MAAMC,WAAW,GAAIC,QAAQ,IAAK,MAAOC,QAAQ,IAAK;EAC3D,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAEP;IAAqB,CAAC,CAAC;IAExC,MAAM;MAAEQ;IAAK,CAAC,GAAG,MAAMT,aAAa,CAACU,GAAG,CAAC,sBAAsBJ,QAAQ,EAAE,CAAC;IAC1EK,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,IAAI,CAAC,CAAC,CAAC;;IAEpCF,QAAQ,CAAC;MACLC,IAAI,EAAEN,oBAAoB;MAC1BW,OAAO,EAAEJ,IAAI,CAACK;IAClB,CAAC,CAAC;IAEFH,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEH,IAAI,CAACK,QAAQ,CAAC,CAAC,CAAC;EACvD,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA,EAAAC,gBAAA,EAAAC,qBAAA;IACZR,OAAO,CAACI,KAAK,CAAC,YAAY,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACK,QAAQ,cAAAJ,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBP,IAAI,cAAAQ,oBAAA,uBAApBA,oBAAA,CAAsBI,OAAO,KAAIN,KAAK,CAACM,OAAO,CAAC;IAE3Ed,QAAQ,CAAC;MACLC,IAAI,EAAEL,iBAAiB;MACvBU,OAAO,EAAE,EAAAK,gBAAA,GAAAH,KAAK,CAACK,QAAQ,cAAAF,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBT,IAAI,cAAAU,qBAAA,uBAApBA,qBAAA,CAAsBE,OAAO,KAAI;IAC9C,CAAC,CAAC;EACN;AACF,CAAC;;AAID;AACA,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM,MAAOf,QAAQ,IAAK;EACjDA,QAAQ,CAAC;IACLC,IAAI,EAAEJ;EACV,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}